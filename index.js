// npm run start-full

require('dotenv').config();
const { Client, LocalAuth } = require('whatsapp-web.js');
const qrcode = require('qrcode-terminal');
const fs = require('fs');
const path = require('path');
const { transcribeAudioLocally } = require('./modules/transcriber');
const { getAIResponse } = require('./modules/aiResponder');
const { calculateDistanceKm } = require('./modules/deliveryCalculator');
const { getSession, updateSession, clearSession, appendHistory } = require('./modules/sessionManager');
const { getAllProducts, saveOrder, getScrewdriversFromDB } = require('./modules/supabase');

// –ó–∞–ø—É—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞ WhatsApp
const client = new Client({ authStrategy: new LocalAuth() });

client.on('qr', qr => qrcode.generate(qr, { small: true }));
client.on('ready', () => console.log('‚úÖ –ë–æ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!'));

// –ì–ª–∞–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
client.on('message', async msg => {
  const sitePhrases = ['—á–µ—Ä–µ–∑ —Å–∞–π—Ç', '–æ–ø–ª–∞—Ç–∞ –Ω–∞ —Å–∞–π—Ç–µ', '—Å–∞–π—Ç', '–æ–ø–ª–∞—Ç–∞ –æ–Ω–ª–∞–π–Ω', '—á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç', '–æ–ø–ª–∞—á–∏–≤–∞—é –Ω–∞ —Å–∞–π—Ç–µ'];
  if (sitePhrases.some(p => msg.body.toLowerCase().includes(p))) {
    await msg.reply('üîó –ö–æ–Ω–µ—á–Ω–æ! –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –Ω–∞—à —Å–∞–π—Ç –¥–ª—è –æ–ø–ª–∞—Ç—ã: https://sabyrshop.freesite.online/');
    return;
  }
  console.log("‚û° –ü—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:", msg.type);

  if (msg.fromMe) return;

  const session = getSession(msg.from);

  // === –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—É–¥–∏–æ —Å–æ–æ–±—â–µ–Ω–∏–π ===
  if (msg.hasMedia && ['audio', 'voice', 'ptt'].includes(msg.type)) {
    const media = await msg.downloadMedia();
    const buffer = Buffer.from(media.data, 'base64');
    const tempFileName = `temp_${Date.now()}.ogg`;
    const audioPath = path.join(__dirname, tempFileName);
    fs.writeFileSync(audioPath, buffer);

    try {
      const text = await transcribeAudioLocally(audioPath);
      console.log('üé§ –†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:', text);
      appendHistory(msg.from, 'user', text); // –¥–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é

      const aiResponse = await getAIResponse(text, msg.from);
      console.log('ü§ñ AI –æ—Ç–≤–µ—Ç:', aiResponse);

      appendHistory(msg.from, 'assistant', aiResponse.text); // –¥–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é

      await msg.reply(`üéß –í—ã —Å–∫–∞–∑–∞–ª–∏: "${text}"\n\nü§ñ ${aiResponse.text}`);

      if (aiResponse?.recommendedProduct) {
        updateSession(msg.from, { recommendedProduct: aiResponse.recommendedProduct });
      }
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –≥–æ–ª–æ—Å–∞:', err.message);
      await msg.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.');
    } finally {
      fs.unlinkSync(audioPath);
    }
    return;
  }

  // === –†–∞–±–æ—Ç–∞–µ–º —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ ===
  const text = msg.body.trim().toLowerCase();
  appendHistory(msg.from, 'user', text);  // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é

  // –°–±—Ä–æ—Å —Å–µ—Å—Å–∏–∏
  if (text === '—Å–±—Ä–æ—Å' || text === '–æ—Ç–º–µ–Ω–∞') {
    clearSession(msg.from);
    await msg.reply('üóëÔ∏è –°–µ—Å—Å–∏—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω–∞.');
    return;
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ —á–µ—Ä–µ–∑ intents
  if (await handleIntentsSmart(text, msg, session)) {
    return;
  }

  // === –í—ã–±–æ—Ä —Ç–æ–≤–∞—Ä–∞ –ø–æ –Ω–æ–º–µ—Ä—É ===
  if (/^\d+$/.test(text) && session.productOptions?.length) {
    const index = parseInt(text) - 1;
    if (index >= 0 && index < session.productOptions.length) {
      const selected = session.productOptions[index];
      updateSession(msg.from, { selectedProduct: selected, state: 'awaiting_order_confirmation' });
      await msg.reply(`‚úÖ –í—ã –≤—ã–±—Ä–∞–ª–∏: ${selected.name} (${selected.price}‚Ç∏).\n–û–ø–∏—Å–∞–Ω–∏–µ: ${selected.description}\n–•–æ—Ç–∏—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑?`);
    } else {
      await msg.reply(`‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–æ–≤–∞—Ä–∞ –æ—Ç 1 –¥–æ ${session.productOptions.length}.`);
    }
    return;
  }

  // === –£–º–Ω–∞—è –∞–≤—Ç–æ–æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—Å–ª–µ AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π ===
  if (
    ['–¥–∞', '—Ö–æ—á—É', '–æ—Ñ–æ—Ä–º–∏—Ç—å', '–¥–∞–≤–∞–π', '–∑–∞–∫–∞–∂–µ–º', '—Ö–æ—á—É –µ–≥–æ'].some(word => text.includes(word)) &&
    !session.selectedProduct &&
    session.recommendedProduct
  ) {
    updateSession(msg.from, { selectedProduct: session.recommendedProduct, state: 'awaiting_address' });
    await msg.reply(`‚úÖ –û—Ñ–æ—Ä–º–ª—è–µ–º –∑–∞–∫–∞–∑ –Ω–∞: ${session.recommendedProduct.name} (${session.recommendedProduct.price}‚Ç∏).\n–£–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:`);
    return;
  }

  // === –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ ===
  if (session.state === 'awaiting_order_confirmation' && ['–¥–∞', '—Ö–æ—á—É', '–æ—Ñ–æ—Ä–º–∏—Ç—å', '–¥–∞–≤–∞–π'].some(word => text.includes(word))) {
    if (session.selectedProduct) {
      updateSession(msg.from, { state: 'awaiting_address' });
      await msg.reply(`‚úÖ –û—Ç–ª–∏—á–Ω–æ! –£–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∞–¥—Ä–µ—Å –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏ –≤–∞—à–µ–≥–æ —Ç–æ–≤–∞—Ä–∞: ${session.selectedProduct.name}`);
    } else {
      await msg.reply('‚ùó –£—Ç–æ—á–Ω–∏—Ç–µ, –∫–∞–∫–æ–π —Ç–æ–≤–∞—Ä –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å.');
    }
    return;
  }

  // === –í–≤–æ–¥ –∞–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ ===
  if (session.state === 'awaiting_address') {
    const address = msg.body.trim();
    try {
      const { km, price } = await calculateDistanceKm(address);
      const success = await saveOrder(msg.from, session.selectedProduct, address, price);
      if (success) {
        updateSession(msg.from, { state: 'awaiting_payment_method' });

        const productPrice = session.selectedProduct.price || 0;
        const totalPrice = productPrice + price;

        await msg.reply(
          `üßæ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω!\n` +
          `üìç –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏: ${address}\n` +
          `üì¶ –¢–æ–≤–∞—Ä: ${session.selectedProduct.name} (${productPrice}‚Ç∏)\n` +
          `üöö –î–æ—Å—Ç–∞–≤–∫–∞: ${price}‚Ç∏ (~${km} –∫–º)\n` +
          `üíµ –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${totalPrice}‚Ç∏\n\n` +
          `üí≥ –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:\n` +
          `- Kaspi\n` +
          `- –ö–∞—Ä—Ç–æ–π (–æ–Ω–ª–∞–π–Ω —á–µ—Ä–µ–∑ —Å–∞–π—Ç: https://sabyrshop.freesite.online/)\n` +
          `- –ù–∞–ª–∏—á–Ω—ã–º–∏\n` +
          `- –í —Ä–∞—Å—Å—Ä–æ—á–∫—É`
        );
      } else {
        await msg.reply('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–∫–∞–∑. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
      }
    } catch (err) {
      await msg.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á—ë—Ç–µ –¥–æ—Å—Ç–∞–≤–∫–∏. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∞–¥—Ä–µ—Å —É–∫–∞–∑–∞–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.');
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á—ë—Ç–µ –¥–æ—Å—Ç–∞–≤–∫–∏:', err.message);
    }
    return;
  }


  // === –í—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã ===
  if (session.state === 'awaiting_payment_method') {
    const kaspiVariants = ['kaspi', '–∫–∞—Å–ø–∏'];
    const cashVariants = ['–Ω–∞–ª–∏—á', '–Ω–∞–ª'];
    const cardVariants = ['–∫–∞—Ä—Ç', '–∫–∞—Ä—Ç–∞', 'visa', 'mastercard', '—á–µ—Ä–µ–∑ —Å–∞–π—Ç', '–æ–ø–ª–∞—Ç–∞ –Ω–∞ —Å–∞–π—Ç–µ', '–æ–Ω–ª–∞–π–Ω', '—Å–∞–π—Ç'];
    const creditVariants = ['—Ä–∞—Å—Å—Ä–æ—á–∫–∞', '–≤ —Ä–∞—Å—Å—Ä–æ—á–∫—É'];
    const includesAny = variants => variants.some(word => text.includes(word));

    if (includesAny(kaspiVariants)) {
      await msg.reply('‚úÖ –û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ Kaspi: –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –Ω–∞ +7 XXX XXX XXXX –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω –æ–ø–ª–∞—Ç—ã.');
      clearSession(msg.from);
      return;
    }
    if (includesAny(cashVariants)) {
      await msg.reply('‚úÖ –û–ø–ª–∞—Ç–∞ –Ω–∞–ª–∏—á–Ω—ã–º–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏. –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –∑–∞–∫–∞–∑!');
      clearSession(msg.from);
      return;
    }
    if (includesAny(cardVariants)) {
      await msg.reply('‚úÖ –í—ã –º–æ–∂–µ—Ç–µ –æ–ø–ª–∞—Ç–∏—Ç—å –∑–∞–∫–∞–∑ –æ–Ω–ª–∞–π–Ω –≤—ã–±—Ä–∞–≤ —Ç–æ–≤–∞—Ä –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ: https://sabyrshop.freesite.online/');
      clearSession(msg.from);
      return;
    }
    if (includesAny(creditVariants)) {
      await msg.reply('üí¨ –î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è —Ä–∞—Å—Å—Ä–æ—á–∫–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –§–ò–û –∏ –ò–ò–ù.');
      updateSession(msg.from, { state: 'awaiting_credit_info' });
      return;
    }
    await msg.reply('‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: Kaspi, –∫–∞—Ä—Ç–æ–π, –Ω–∞–ª–∏—á–Ω—ã–º–∏ –∏–ª–∏ —Ä–∞—Å—Å—Ä–æ—á–∫–∞.');
    return;
  }


  // === –û—Ç–¥–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —à—É—Ä—É–ø–æ–≤—ë—Ä—Ç–æ–≤ ===
  if (text.includes('—à—É—Ä—É–ø–æ–≤–µ—Ä—Ç') || text.includes('—à—É—Ä—É–ø–æ–≤—ë—Ä—Ç')) {
    const screwdriverOptions = await getScrewdriversFromDB();
    if (screwdriverOptions.length === 0) {
      await msg.reply('‚ùå –®—É—Ä—É–ø–æ–≤—ë—Ä—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.');
      return;
    }
    updateSession(msg.from, { productOptions: screwdriverOptions });
    const list = screwdriverOptions.map((p, i) => `${i + 1}. üîπ ${p.name} - ${p.price}‚Ç∏`).join('\n');
    await msg.reply(`–î–æ—Å—Ç—É–ø–Ω—ã–µ —à—É—Ä—É–ø–æ–≤—ë—Ä—Ç—ã:\n\n${list}\n\n–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ.`);
    return;
  }

  // === –§–∏–Ω–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ AI (–µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ) ===
  const aiResponse = await getAIResponse(msg.body, msg.from);
  await msg.reply(aiResponse.text);
  appendHistory(msg.from, 'assistant', aiResponse.text);
  if (aiResponse?.recommendedProduct) {
    updateSession(msg.from, { recommendedProduct: aiResponse.recommendedProduct });
  }
});

client.initialize();

// ===================== –ò–Ω—Ç–µ–Ω—Ç—ã ==========================

const intents = {
  order: ['–æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑', '—Ö–æ—á—É –∑–∞–∫–∞–∑–∞—Ç—å', '–∑–∞–∫–∞–∑—ã–≤–∞—é', '–ø–æ–∫—É–ø–∫–∞', '–¥–∞–≤–∞–π—Ç–µ –æ—Ñ–æ—Ä–º–∏–º'],
  specs: ['—Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏', '–º–æ—â–Ω–æ—Å—Ç—å', '–æ–±–æ—Ä–æ—Ç–æ–≤', '–∫—Ä—É—Ç—è—â–∏–π –º–æ–º–µ–Ω—Ç', '—Å–µ—Ç–µ–≤–æ–π', '–∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–Ω—ã–π', '–∑–∞—Ä—è–¥'],
  price: ['—Ü–µ–Ω–∞', '—Å–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç', '—Å–∫–æ–ª—å–∫–æ –æ–±–æ–π–¥–µ—Ç—Å—è', '—Å–∫–∏–¥–∫–∏', '—Å—Ç–æ–∏–º–æ—Å—Ç—å'],
  delivery: ['–¥–æ—Å—Ç–∞–≤–∫–∞', '—Å–∞–º–æ–≤—ã–≤–æ–∑', '–∫—É–¥–∞ –¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç–µ', '–¥–æ—Å—Ç–∞–≤–∏—Ç–µ', '–∑–∞–±—Ä–∞—Ç—å'],
  payment: ['–æ–ø–ª–∞—Ç–∞', '–æ–ø–ª–∞—Ç–∏—Ç—å', '–∫–∞—Å–ø–∏', '–∫–∞—Ä—Ç–∞', '—Ä–∞—Å—Å—Ä–æ—á–∫–∞'],
  greet: ['–ø—Ä–∏–≤–µ—Ç', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ', '–ø–æ–º–æ—â—å', '–ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥—É–π—Ç–µ', '—Ä–∞–±–æ—Ç–∞–µ—Ç–µ', '–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è'],
  address: ['–≥–¥–µ –≤—ã', '–∞–¥—Ä–µ—Å', '—Ä–µ–∫–≤–∏–∑–∏—Ç—ã', '—Å–∫–ª–∞–¥', '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å']
};

async function handleIntentsSmart(text, msg, session) {
  for (const group in intents) {
    for (const phrase of intents[group]) {
      if (text.includes(phrase)) {
        switch (group) {
          case 'order':
            await msg.reply('‚úÖ –ö–æ–Ω–µ—á–Ω–æ! –ù–∞–ø–∏—à–∏—Ç–µ, –∫–∞–∫–æ–π —Ç–æ–≤–∞—Ä –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç, –∏ –º—ã –æ—Ñ–æ—Ä–º–∏–º –∑–∞–∫–∞–∑.');
            return true;
          case 'specs':
            await msg.reply('üîß –£—Ç–æ—á–Ω–∏—Ç–µ –º–æ–¥–µ–ª—å —Ç–æ–≤–∞—Ä–∞, –∏ —è —Ä–∞—Å—Å–∫–∞–∂—É –æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞—Ö.');
            return true;
          case 'price':
            await msg.reply('üí∞ –¶–µ–Ω—ã –∑–∞–≤–∏—Å—è—Ç –æ—Ç –º–æ–¥–µ–ª–∏. –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞.');
            return true;
          case 'delivery':
            await msg.reply('üöö –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –ê–ª–º–∞—Ç—ã ‚Äî 500‚Ç∏ + 200‚Ç∏ –∑–∞ –∫–º, –ø–æ –†–ö ‚Äî –ö–∞–∑–ø–æ—á—Ç–∞ 2500‚Ç∏.');
            return true;
          case 'payment':
            await msg.reply('üí≥ –ú—ã –ø—Ä–∏–Ω–∏–º–∞–µ–º: Kaspi, –∫–∞—Ä—Ç–æ–π, –Ω–∞–ª–∏—á–Ω—ã–º–∏, —Ä–∞—Å—Å—Ä–æ—á–∫–∞.');
            return true;
          case 'greet':
            await msg.reply('üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –Ø –ø–æ–º–æ–≥—É –≤–∞–º –≤—ã–±—Ä–∞—Ç—å –∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑.');
            return true;
          case 'address':
            await msg.reply('üìç –ù–∞—à —Å–∫–ª–∞–¥: –ê–ª–º–∞—Ç—ã, –ø—Ä–æ—Å–ø–µ–∫—Ç –†–∞–π—ã–º–±–µ–∫–∞, 373.');
            return true;
        }
      }
    }
  }
  return false;
}
