const sessions = new Map();

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å–µ—Å—Å–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ï—Å–ª–∏ —Å–µ—Å—Å–∏–∏ –Ω–µ—Ç ‚Äî —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—É—é.
 */
function getSession(userId) {
  if (!sessions.has(userId)) {
    sessions.set(userId, {
      state: null,
      selectedProduct: null,
      productOptions: [],
      recommendedProduct: null,
      history: []  // üëà –¥–æ–±–∞–≤–ª—è–µ–º —Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    });
  }
  return sessions.get(userId);
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–µ—Å—Å–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ–±—ä–µ–¥–∏–Ω—è—è –¥–∞–Ω–Ω—ã–µ.
 */
function updateSession(userId, data) {
  const session = getSession(userId);
  sessions.set(userId, { ...session, ...data });
}

/**
 * –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é.
 */
function appendHistory(userId, role, content) {
  const session = getSession(userId);
  if (!session.history) session.history = [];
  session.history.push({ role, content });

  // –û–≥—Ä–∞–Ω–∏—á–∏–º –∏—Å—Ç–æ—Ä–∏—é –¥–æ 15 —Å–æ–æ–±—â–µ–Ω–∏–π, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∂–∞—Ç—å OpenAI
  if (session.history.length > 15) {
    session.history.shift();
  }
}

/**
 * –û—á–∏—â–∞–µ—Ç —Å–µ—Å—Å–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 */
function clearSession(userId) {
  sessions.delete(userId);
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 */
function getSelectedProduct(userId) {
  const session = getSession(userId);
  return session.selectedProduct || null;
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤.
 */
function getProductOptions(userId) {
  const session = getSession(userId);
  return session.productOptions || [];
}

module.exports = {
  getSession,
  updateSession,
  clearSession,
  getSelectedProduct,
  getProductOptions,
  appendHistory  // üëà –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥
};
